% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/random.R
\name{tie_level_accuracy}
\alias{tie_level_accuracy}
\alias{sample_css_network}
\title{Null distribution for Cognitive Imaginary Structures}
\usage{
tie_level_accuracy(graph, which_nets = NULL)

sample_css_network(
  graph,
  prob = tie_level_accuracy(graph),
  i = 1L:attr(graph, "netsize"),
  keep_baseline = TRUE
)
}
\arguments{
\item{graph}{A barry_graph object.}

\item{which_nets}{Integer vector. The networks to sample from.}

\item{prob}{A numeric vector of length 4L or a data frame (see details).}

\item{i}{Integer vector. The network to sample from.}

\item{keep_baseline}{Logical scalar. When \code{TRUE}, the function returns
the baseline network as the first element of the list.}
}
\value{
The function \code{tie_level_accuracy} returns a data frame with the following columns:
\itemize{
\item \code{k}: The perceiver id.
\item \code{p_0_ego}: The probability of no tie between the perceiver (ego) and an alter.
\item \code{p_1_ego}: The probability of a tie between the perceiver and an alter.
\item \code{p_0_alter}: The probability of no tie between two alters.
\item \code{p_1_alter}: The probability of a tie between two alters.
}

The function \code{sample_css_network} returns a list of square matrices of size
\code{attr(graph, "netsize")}. If \code{keep_baseline = TRUE}, the first element of
the list is the baseline network. Otherwise, it is not returned.
}
\description{
These functions can be used to generate null distributions for testing the
prevalence of imaginary CSS. The null is a function of the individual level
accuracy rates, in other words. Pr(i perceives a one| there is a one) and
Pr(i perceives a zero| there is a zero).
}
\details{
There are two special cases worth mentioning. First, when the baseline graph
is fully connected and the probability of true negative is set to \code{NA}. On the
other hand, if the baseline graph is empty the probability of true positive
is \code{NA} as well. This doesn't affect the \code{sample_css_network} function
because those probabilities are unsed since tie/no tie probabilities are
according to the baseline graph, meaning that, for instance, a fully
connected network will never use the \code{p_0_ego} and \code{p_0_alter}
probabilities and an empty network will never use the \code{p_1_ego} and
\code{p_1_alter} probabilities.

The function \code{sample_css_network} samples perceived networks from the
baseline network. The baseline network is the first network in the
\code{graph} object. The function \code{tie_level_accuracy} can be used to
generate the probability vector.

The probability vector is a numeric vector of length 4L. The first
two elements are the probability of a tie/no tie between an ego and an alter.
The third and fourth elements are the probability of a tie/no tie between
two alters. When \code{prob} is a data frame, the function will sample from
each row of the data frame (returned from the function \code{tie_level_accuracy}).
}
\examples{
\dontrun{
taccuracy <- tie_level_accuracy(graph)
boxplot(taccuracy[,-1])
}
}
